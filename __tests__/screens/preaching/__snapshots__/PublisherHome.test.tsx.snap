// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test in <PublisherHome /> screen should to match snapshot 1`] = `
<View
  onLayout={[Function]}
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    style={
      [
        {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <RCTScrollView
      contentContainerStyle={
        {
          "alignItems": "center",
          "padding": 24,
          "paddingBottom": 100,
        }
      }
      overScrollMode="never"
      refreshControl={
        <RefreshControlMock
          colors={
            [
              "#000",
            ]
          }
          onRefresh={[Function]}
          refreshing={false}
        />
      }
      style={
        {
          "flex": 1,
        }
      }
    >
      <RCTRefreshControl />
      <View>
        <View
          style={
            [
              {
                "alignItems": "flex-start",
                "marginBottom": 40,
                "width": "100%",
              },
              {
                "marginBottom": 16,
                "paddingBottom": 0,
                "paddingTop": 8,
              },
            ]
          }
        >
          <Text
            style={
              [
                {
                  "color": "#FFFFFF",
                  "fontSize": 38,
                  "fontWeight": "bold",
                },
                {
                  "fontSize": 24,
                },
              ]
            }
            testID="title-text"
          >
            ÚLTIMA LECCIÓN
          </Text>
        </View>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": false,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            [
              {
                "overflow": "hidden",
              },
              {
                "marginVertical": 8,
                "width": 734,
              },
            ]
          }
          testID="lesson-card-touchable"
        >
          <View
            style={
              {
                "backgroundColor": "#292929",
                "padding": 15,
              }
            }
          >
            <Text
              style={
                {
                  "color": "#BFBFBF",
                  "fontSize": 14,
                  "marginBottom": 15,
                }
              }
              testID="lesson-card-status-text"
            >
              Clase para el 31 de December del 2020
            </Text>
            <Text
              style={
                {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                }
              }
              testID="lesson-card-description-text"
            >
              Nemo et et non nesciunt ipsum sed rerum vero. Nostrum quae officiis qui nihil dignissimos consectetur aperiam. Vel harum ex. Ipsum ratione necessitatibus eum sint vero enim et consequatur. Ab autem re...
            </Text>
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": false,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                [
                  {
                    "overflow": "hidden",
                  },
                  [
                    {
                      "alignItems": "center",
                      "backgroundColor": "transparent",
                      "borderRadius": 50,
                      "height": 48,
                      "justifyContent": "center",
                      "margin": 5,
                      "width": 48,
                    },
                    {
                      "height": 35,
                      "position": "absolute",
                      "right": -2.5,
                      "top": 5,
                      "width": 35,
                    },
                  ],
                ]
              }
              testID="fab-touchable"
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": "#C0A7E1",
                      "fontSize": 21,
                    },
                    undefined,
                    {
                      "fontFamily": "Ionicons",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </View>
            <View
              style={
                {
                  "position": "absolute",
                  "right": 20,
                  "top": 30,
                }
              }
            >
              <View
                collapsable={false}
              >
                <View
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                >
                  <View
                    ctx={
                      {
                        "menuActions": {
                          "_getOpenedMenu": [Function],
                          "_notify": [Function],
                          "closeMenu": [Function],
                          "isMenuOpen": [Function],
                          "openMenu": [Function],
                          "toggleMenu": [Function],
                        },
                        "menuRegistry": {
                          "getAll": [Function],
                          "getMenu": [Function],
                          "setOptionsCustomStyles": [Function],
                          "subscribe": [Function],
                          "unsubscribe": [Function],
                          "updateLayoutInfo": [Function],
                        },
                      }
                    }
                    style={
                      [
                        undefined,
                        undefined,
                      ]
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            [
              {
                "alignItems": "flex-start",
                "marginBottom": 40,
                "width": "100%",
              },
              {
                "marginBottom": 16,
                "paddingBottom": 0,
                "paddingTop": 32,
              },
            ]
          }
        >
          <Text
            style={
              [
                {
                  "color": "#FFFFFF",
                  "fontSize": 38,
                  "fontWeight": "bold",
                },
                {
                  "fontSize": 24,
                },
              ]
            }
            testID="title-text"
          >
            ÚLTIMA REVISITA
          </Text>
        </View>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": false,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            [
              {
                "overflow": "hidden",
              },
              {
                "marginVertical": 8,
                "width": 734,
              },
            ]
          }
          testID="revisit-card-touchable"
        >
          <View
            style={
              {
                "backgroundColor": "#292929",
                "padding": 16,
              }
            }
          >
            <Text
              style={
                {
                  "color": "#BFBFBF",
                  "fontSize": 14,
                  "marginBottom": 15,
                }
              }
              testID="revisit-card-next-visit-text"
            >
              Visitar el 09 de December del 2021
            </Text>
            <Text
              style={
                {
                  "color": "#FFFFFF",
                  "fontSize": 18,
                  "fontWeight": "bold",
                  "marginBottom": 5,
                }
              }
              testID="revisit-card-person-name-text"
            >
              Dariana Hand
            </Text>
            <Text
              style={
                {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                }
              }
              testID="revisit-card-about-text"
            >
              Ratione quae debitis pariatur tempora magnam est voluptatibus. Eveniet ipsum omnis maxime et soluta iusto. Autem aut ducimus dolore et recusandae et inventore. Enim autem in hic optio.
            </Text>
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": false,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                [
                  {
                    "overflow": "hidden",
                  },
                  [
                    {
                      "alignItems": "center",
                      "backgroundColor": "transparent",
                      "borderRadius": 50,
                      "height": 48,
                      "justifyContent": "center",
                      "margin": 5,
                      "width": 48,
                    },
                    {
                      "height": 35,
                      "position": "absolute",
                      "right": -2.5,
                      "top": 5,
                      "width": 35,
                    },
                  ],
                ]
              }
              testID="fab-touchable"
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  [
                    {
                      "color": "#C0A7E1",
                      "fontSize": 21,
                    },
                    undefined,
                    {
                      "fontFamily": "Ionicons",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    {},
                  ]
                }
              >
                
              </Text>
            </View>
            <View
              style={
                {
                  "position": "absolute",
                  "right": 20,
                  "top": 30,
                }
              }
            >
              <View
                collapsable={false}
              >
                <View
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                >
                  <View
                    ctx={
                      {
                        "menuActions": {
                          "_getOpenedMenu": [Function],
                          "_notify": [Function],
                          "closeMenu": [Function],
                          "isMenuOpen": [Function],
                          "openMenu": [Function],
                          "toggleMenu": [Function],
                        },
                        "menuRegistry": {
                          "getAll": [Function],
                          "getMenu": [Function],
                          "setOptionsCustomStyles": [Function],
                          "subscribe": [Function],
                          "unsubscribe": [Function],
                          "updateLayoutInfo": [Function],
                        },
                      }
                    }
                    style={
                      [
                        undefined,
                        undefined,
                      ]
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        [
          {
            "overflow": "hidden",
          },
          [
            {
              "alignItems": "center",
              "backgroundColor": "#C0A7E1",
              "borderRadius": 50,
              "height": 48,
              "justifyContent": "center",
              "margin": 5,
              "width": 48,
            },
            {
              "bottom": 5,
              "height": 60,
              "position": "absolute",
              "right": 10,
              "width": 60,
            },
          ],
        ]
      }
      testID="fab-touchable"
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          [
            {
              "color": "#121212",
              "fontSize": 40,
            },
            undefined,
            {
              "fontFamily": "Ionicons",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            {},
          ]
        }
      >
        
      </Text>
    </View>
    <Modal
      animationType="fade"
      hardwareAccelerated={false}
      statusBarTranslucent={true}
      transparent={true}
      visible={false}
    />
    <Modal
      animationType="fade"
      hardwareAccelerated={false}
      statusBarTranslucent={true}
      transparent={true}
      visible={false}
    />
    <Modal
      animationType="fade"
      hardwareAccelerated={false}
      statusBarTranslucent={true}
      transparent={true}
      visible={false}
    />
    <Modal
      animationType="fade"
      hardwareAccelerated={false}
      statusBarTranslucent={true}
      transparent={true}
      visible={false}
    />
    <Modal
      animationType="fade"
      hardwareAccelerated={false}
      statusBarTranslucent={true}
      transparent={true}
      visible={false}
    />
    <Modal
      animationType="fade"
      hardwareAccelerated={false}
      statusBarTranslucent={true}
      transparent={true}
      visible={false}
    />
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;
